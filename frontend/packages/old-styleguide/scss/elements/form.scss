/*
 * SPDX-FileCopyrightText: 2017-2020 City of Espoo
 *
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */

$input-color: $grey-darker !default;
$input-background-color: $background !default;
$input-border-color: $grey !default;
$input-shadow: none !default;
$input-placeholder-color: rgba($input-color, 0.3) !default;

$input-hover-color: $grey-darker !default;
$input-hover-border-color: $grey-dark !default;

$input-focus-color: $grey-darker !default;
$input-focus-border-color: $soft-blue !default;
$input-focus-border-width: 2px !default;
$input-focus-box-shadow-size: none !default;
$input-focus-box-shadow-color: rgba($link, 0.25) !default;

$input-disabled-color: $grey-dark !default;
$input-disabled-background-color: $background !default;
$input-disabled-border-color: $grey-light !default;
$input-disabled-placeholder-color: rgba($input-disabled-color, 0.3) !default;

$input-arrow: $link !default;

$input-icon-color: $grey !default;
$input-icon-active-color: $grey !default;

$input-radius: 0 !default;

$input-height: 2.5em !default;

$file-border-color: $border !default;
$file-radius: 0 !default;

$file-cta-background-color: $background !default;
$file-cta-color: $grey-dark !default;
$file-cta-hover-color: $grey-darker !default;
$file-cta-active-color: $grey-darker !default;

$file-name-border-color: $border !default;
$file-name-border-style: solid !default;
$file-name-border-width: 1px 1px 1px 0 !default;
$file-name-max-width: 16em !default;

$label-color: $grey-darker !default;
$label-weight: $weight-semibold !default;

$help-size: 12px !default;
$help-line-height: 1.5em !default;
$help-margin-top: 0.575em;

$field-margin-bottom: 1rem !default;

@mixin input {
  @extend %control;

  background-color: $input-background-color;
  border-color: $input-border-color;
  color: $input-color;

  @include placeholder {
    color: $input-placeholder-color;
  }

  &:hover,
  &.is-hovered {
    border-color: $input-hover-border-color;
  }

  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-box-shadow-size $input-focus-box-shadow-color;
  }

  &[disabled],
  fieldset[disabled] & {
    background-color: $input-disabled-background-color;
    border-color: $input-disabled-border-color;
    box-shadow: none;
    color: $input-disabled-color;

    @include placeholder {
      color: $input-disabled-placeholder-color;
    }
  }
}

@mixin input-color($color) {
  border-color: $color;

  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    box-shadow: $input-focus-box-shadow-size rgba($color, 0.25);
  }

  & ~ .icon {
    color: $color;
  }
}

.textarea {
  resize: vertical;
  height: auto;
}

.input {
  height: $input-height;
}

.input,
.textarea {
  @include input;
  display: block;
  width: 100%;

  box-shadow: $input-shadow;
  max-width: 100%;
  width: 100%;
  min-height: $input-height;

  border-radius: 0;
  border-width: 0 0 1px 0;
  background-color: transparent;
  padding-bottom: $control-padding-vertical;

  &[readonly] {
    box-shadow: none;
  }

  &:focus,
  &.is-focused {
    padding-bottom: calc(#{$control-padding-vertical} - 1px);
    border-bottom-width: $input-focus-border-width;
  }

  &.is-success {
    @include input-color($success);
  }
  &.is-error,
  &.is-danger {
    @include input-color($danger);
  }

  &[disabled] {
    background-color: transparent;
  }

  &::placeholder {
    color: $grey-dark;
    opacity: 1;
    font-style: italic;
  }

  &:-ms-input-placeholder {
    color: $grey-dark;
    font-style: italic;
  }

  &::-ms-input-placeholder {
    color: $grey-dark;
    font-style: italic;
  }

  &.is-borderless {
    border: none;
  }
}


.select {
  select {
    border-radius: 0;
    border-width: 0 0 1px 0;
    height: $input-height;

    &:focus,
    &.is-focus {
      padding-bottom: calc(#{$control-padding-vertical} - 1px);
      border-bottom-width: $input-focus-border-width;
    }

    &[disabled] {
      border: none;
      background-image: linear-gradient(
        to right,
        $grey-dark 25%,
        rgba(255, 255, 255, 0) 0%
      );
      background-position: bottom;
      background-size: 4px 1px;
      background-repeat: repeat-x;
    }
  }

  &:not(.is-multiple) {
    height: 2.5em;

    &::after {
      border-color: #000; // TODO: Use correct color codes
      top: 50%;
      right: 0.5em;
      height: 0.6em;
      width: 0.6em;
    }
  }

  &:hover::after {
    border-color: #6e6e6e; // TODO: Use correct color codes
  }
}

.select {
  display: inline-block;
  max-width: 100%;
  position: relative;
  vertical-align: top;

  select {
    @include input;

    cursor: pointer;
    display: block;
    font-size: 1em;
    max-width: 100%;
    outline: none;
    height: $input-height;

    &:focus,
    &.is-focus {
      padding-bottom: calc(#{$control-padding-vertical} - 1px);
      border-bottom-width: $input-focus-border-width;
    }

    &[disabled] {
      border: none;
      background-image: linear-gradient(
        to right,
        $grey-dark 25%,
        rgba(255, 255, 255, 0) 0%
      );
      background-position: bottom;
      background-size: 4px 1px;
      background-repeat: repeat-x;
    }
  }

  &:not(.is-multiple) {
    height: 2.5em;

    &::after {
      border-color: #000; // TODO: Use correct color codes
      top: 50%;
      right: 0.5em;
      height: 0.6em;
      width: 0.6em;
    }
  }

  &:hover::after {
    border-color: #6e6e6e; // TODO: Use correct color codes
  }

  &.is-fullwidth {
    width: 100%;

    select {
      width: 100%;
    }
  }
}

.control {
  box-sizing: border-box;
  clear: both;
  font-size: $size-normal;
  position: relative;
  text-align: left;

  &.is-success {
    .input,
    .textarea,
    .select {
      @include input-color($success);
    }

    .icon {
      color: $success;
    }
  }
  &.is-error,
  &.is-danger {
    .input,
    .textarea,
    .select {
      @include input-color($danger);
    }

    .icon {
      color: $danger;
    }
  }
  &.is-warning {
    .input,
    .textarea,
    .select {
      @include input-color($warning);
    }

    .icon {
      color: $warning;
    }
  }

  &.has-icons,
  &.has-icons-right {
    .icon {
      pointer-events: none;
      position: absolute;
      z-index: 4;
      width: 1.2rem;
      height: 1.5em;
      bottom: -25px;
      right: 0;
    }

    .input,
    .select {
      &.is-success ~ .icon {
        color: $success;
      }

      &.is-danger ~ .icon {
        color: $danger;
      }

      &.is-warning ~ .icon {
        color: $warning;
      }
    }

    & ~ .help {
      right: 1.2rem;
    }
  }
}

.field {
  position: relative;
  padding-bottom: calc(#{$help-size} + #{$help-margin-top} + 2px);

  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  .help {
    position: absolute;
    left: 0; right: 0;
    margin-top: $help-margin-top;
    padding-left: calc(#{$control-padding-horizontal} + 2px);
  }

  .control.has-icons-right {
    .icon.is-right {
      width: 1.2rem;
      height: 1.5em;
      top: calc(#{$input-height} + 4px);
    }

    .input {
      padding-right: $control-padding-horizontal;
    }
  }

  &:not(:last-child) {
    margin-bottom: $field-margin-bottom;
  }

  .select-caret {
    pointer-events: none;
    position: absolute;
    top: 50%;
    right: 8px;
    margin-top: -10px;
  }

  &.has-addons {
    .control {
      display: flex;
      justify-content: flex-start;
      margin-bottom: 0;

      .help {
        top: 1.5rem;
      }

      .control {
        &:not(:last-child) {
          margin-right: -1px;
        }

        &:not(:first-child):not(:last-child) {
          .button,
          .input,
          .select select {
            border-radius: 0;
          }
        }

        &:first-child:not(:only-child) {
          .button,
          .input,
          .select select {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
          }
        }

        &:last-child:not(:only-child) {
          .button,
          .input,
          .select select {
            border-bottom-left-radius: 0;
            border-top-left-radius: 0;
          }
        }

        .button,
        .input,
        .select select {
          &:not([disabled]) {
            &:hover,
            &.is-hovered {
              z-index: 2;
            }

            &:focus,
            &.is-focused,
            &:active,
            &.is-active {
              z-index: 3;

              &:hover {
                z-index: 4;
              }
            }
          }
        }

        &.is-expanded {
          flex-grow: 1;
        }
      }
    }
  }

  &.is-horizontal {
    padding-bottom: 0;
  }

  &.is-required {
    .label::after {
      content: ' *';
    }
  }


  &.is-disabled {
    @include input-color($input-disabled-border-color);

    .label {
      color: $input-disabled-color;
    }
  }
}

.help {
  display: block;
  font-size: $help-size;
  margin-top: 0.25rem;

  line-height: $help-line-height;
  min-height: $help-line-height;
  color: $grey-dark;
}

.sum-field .help {
  @include applyStateColors();
}

.label {
  color: $label-color;
  display: block;
  font-size: $size-normal;
  font-weight: $label-weight;
}

.field-label {
  padding-bottom: $control-padding-vertical;
  padding-left: $control-padding-horizontal;
  padding-right: $control-padding-horizontal;
  padding-top: $control-padding-vertical;
}
